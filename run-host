#!/bin/bash
#
# Groups commands that run on the Share Space host.

quit() {
  echo $1
  exit 1
}

GUEST() {
  echo "share-space-$1"
}

HOST_ROOT=$(dirname $(realpath $0))
PROJECT_ROOT=${PROJECT_ROOT:-"/home/vagrant/dev/share-space"}

_is_mounted() {
  local ENV=$1
  mount | grep -q "$(GUEST $ENV):$PROJECT_ROOT on $HOST_ROOT/$ENV"
}

mount-env() {
  cd $HOST_ROOT  

  local ENV=$1

  if ! $(_is_mounted $ENV); then
    mkdir -p $ENV
    sudo mount -t nfs $(GUEST $ENV):$PROJECT_ROOT $HOST_ROOT/$ENV
  fi
}

unmount-env() {
  cd $HOST_ROOT

  local ENV=$1

  if $(_is_mounted $ENV); then
    sudo umount $2 $ENV
  fi
}

list-mounts() {
  mount | grep "share-space"
}

stack() {
  cd $HOST_ROOT

  local ENV=$1
  local CMD=$2
  local USAGE="Usage: run-host stack ENV {init|mount|build|up|down|status|unmount|halt|destroy}"

  if [ "$ENV" == "help" -o "$CMD" == "help" -o -z "$CMD" -o -z "$ENV" ]; then
    echo $USAGE
    exit
  fi

  case "$CMD" in
    init)
      vagrant up $ENV
      ;;
    halt)
      ./run-host stack $ENV unmount $3 && \
        vagrant halt $ENV
      ;;
    destroy)
      ./run-host stack $ENV unmount $3 && \
        vagrant destroy $3 $ENV
      ;;
    mount)
      vagrant up $ENV && \
        ./run-host mount-env $ENV
      ;;
    unmount)
      ./run-host unmount-env $ENV $3
      ;;
    build|up|down|status)
      vagrant provision $ENV --provision-with=stack-$CMD
      ;;
    *)
      echo "Unrecognized command $CMD"
      echo $USAGE
      exit 1
  esac
}

help() {
  echo "Usage: $prog_name { $(join_by " | " ${CMDS[*]}) } [args ...]"
}

### Command Line Interface

join_by() {
  local d=$1; 
  shift; 
  echo -n "$1"; 
  shift; 
  printf "%s" "${@/#/$d}"
}

CMDS=(mount-env \
      unmount-env \
      list-mounts \
      stack \
      help)

prog_name=$0
cmd=$1
shift || true

for option in ${CMDS[*]}; do
  if [ "$cmd" == "$option" ]; then
    $cmd $@
    exit
  fi
done

echo "Unrecognized command $cmd"
help
exit 1
